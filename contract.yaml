openapi: 3.0.0
info:
  title: Contract API
  version: v1
  description: API for managing contracts, with CRUD operations.
servers:
  - url: https://mp1a72cf35f032a465f3.free.beeceptor.com/api/v1

paths:
  /contracts:
    get:
      summary: Retrieve a list of all contracts
      responses:
        '200':
          description: A list of contracts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
              example:
                - id: 1
                  title: "Service Agreement"
                  startDate: "2024-01-01"
                  endDate: "2024-12-31"
                  status: "active"
                  parties: ["Company A", "Company B"]
                  amount: 50000
                - id: 2
                  title: "Supply Agreement"
                  startDate: "2024-02-01"
                  endDate: "2024-12-31"
                  status: "terminated"
                  parties: ["Supplier A", "Retailer B"]
                  amount: 100000

    post:
      summary: Create a new contract
      requestBody:
        description: Contract to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
            example:
              title: "New Service Contract"
              startDate: "2024-06-01"
              endDate: "2025-06-01"
              status: "active"
              parties: ["Company X", "Company Y"]
              amount: 75000
      responses:
        '201':
          description: Contract created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
              example:
                id: 3
                title: "New Service Contract"
                startDate: "2024-06-01"
                endDate: "2025-06-01"
                status: "active"
                parties: ["Company X", "Company Y"]
                amount: 75000

  /contracts/{contractId}:
    parameters:
      - name: contractId
        in: path
        required: true
        schema:
          type: integer
        description: Unique identifier of the contract

    get:
      summary: Retrieve a specific contract by ID
      responses:
        '200':
          description: Contract details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
              example:
                id: 1
                title: "Service Agreement"
                startDate: "2024-01-01"
                endDate: "2024-12-31"
                status: "active"
                parties: ["Company A", "Company B"]
                amount: 50000
        '404':
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found"
                message: "Contract with ID 1 not found."

    put:
      summary: Update an existing contract
      requestBody:
        description: Updated contract data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
            example:
              title: "Updated Service Contract"
              startDate: "2024-06-01"
              endDate: "2025-06-01"
              status: "active"
              parties: ["Company X", "Company Y"]
              amount: 80000
      responses:
        '200':
          description: Contract updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
              example:
                id: 1
                title: "Updated Service Contract"
                startDate: "2024-06-01"
                endDate: "2025-06-01"
                status: "active"
                parties: ["Company X", "Company Y"]
                amount: 80000
        '404':
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found"
                message: "Contract with ID 1 not found."

    delete:
      summary: Delete a specific contract by ID
      responses:
        '204':
          description: Contract deleted successfully
        '404':
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found"
                message: "Contract with ID 1 not found."

components:
  schemas:
    Contract:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Service Agreement"
        startDate:
          type: string
          format: date
          example: "2024-01-01"
        endDate:
          type: string
          format: date
          example: "2024-12-31"
        status:
          type: string
          example: "active"
        parties:
          type: array
          items:
            type: string
          example: ["Company A", "Company B"]
        amount:
          type: number
          example: 50000

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "Contract not found."